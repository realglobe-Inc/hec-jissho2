error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  server_tokens off;
  include /etc/nginx/mime.types;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx/access.log  main;
  keepalive_timeout  30;

  # See server/env/port.json
  upstream ui {
    least_conn;
    server localhost:3101 weight=10 max_fails=3 fail_timeout=30;
  }

  upstream camera {
    least_conn;
    server localhost:3102 weight=10 max_fails=3 fail_timeout=30;
  }

  upstream report {
    least_conn;
    server localhost:3103 weight=10 max_fails=3 fail_timeout=30;
  }

  server {
    # port DEV
    listen 3100;

    location / {
      return 404;
    }

    location /jissho2/ {
      proxy_pass http://localhost:3130/;
      proxy_http_version 1.1;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }

  # proxy
  server {
    listen 3130;

    location / {
      proxy_pass http://ui;
      proxy_http_version 1.1;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    location /rest/cameras/ {
      proxy_pass http://camera;
      proxy_http_version 1.1;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    location /rest/reports/ {
      proxy_pass http://report;
      proxy_http_version 1.1;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    location /uploaded/ {
      proxy_pass http://localhost:3131/;
    }
  }

  # images
  # あとでキャッシュも設定する
  server {
    listen 3131;
    # すごく藤のローカル依存
    root /home/fujiharuka/hc/hec-jissho2/server/public/uploaded;

    location /photos/ {
      # TODO クエリの条件をちゃんと書く
      if ($query_string ~ .*width=.*) {
        rewrite ^/photos/(.*)$ /image_filter/$1 last;
      }
    }

    location /image_filter/ {
      internal;

      set $file $1;
      set $width 150;
      set $height 150;
      set $quality 75;

      if ($arg_width ~ (\d*)) {
          set $width $1;
      }
      if ($arg_height ~ (\d*)) {
          set $height $1;
      }
      if ($arg_quality ~ (100|[1-9][0-9]|[1-9])) {
          set $quality $1;
      }

      if ($arg_type = "resize") {
          rewrite ^ /resize last;
      }

      rewrite ^ /crop last;
    }

    location /resize {
        internal;
        rewrite ^ /photos/$file break;
        image_filter  resize  $width $height;
        image_filter_jpeg_quality $quality;
        error_page 415 = @empty;
    }

    location /crop {
        internal;
        rewrite ^ /photos/$file break;
        image_filter  crop  $width $height;
        image_filter_jpeg_quality $quality;
        error_page 415 = @empty;
    }

    location @empty {
        empty_gif;
    }
  }
}
